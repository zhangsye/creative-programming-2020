int count=1;
int[][] letters = {
{1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,1}, 
{1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1}, 
{0,1,1,0,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1}, 
{1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, 
{1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},
{1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1},
{1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,0},
{1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1},
{0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1},
{1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1},
{0,1,1,0,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1},
{1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,1},
{1,1,0,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0},
{1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0},
{1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,1,1},
{1,0,0,1,1,1,0,1,1,0,1,1,1,0,0,1,1,0,0,1},
{1,1,0,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,0},
};
int blockSize =10;
void setup() {
size(1500,480);
noStroke();
background(166,24,62);
}
void draw(){
fill(255,223,185);
translate(blockSize*6,count*blockSize*6);
for (int i = 0; i < letters.length; i++) {
int xPos = 0;
int yPos = 0;
for (int j = 0; j < letters[i].length; j++) {
if (letters[i][j] == 1) {
 rect(xPos, yPos, blockSize, blockSize);
}
xPos += blockSize;
if (j % 4 == 3) {
xPos = 0; 
yPos += blockSize;
}}
translate(blockSize *5, 0);
}
  count+=1;
}
